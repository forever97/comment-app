{"version":3,"sources":["CommentInput.js","Comment.js","CommentList.js","CommentApp.js","index.js"],"names":["CommentInput","state","username","content","event","this","setState","target","value","props","onSubmit","createdTime","Date","localStorage","setItem","_saveUsername","className","onBlur","handleUsernameBlur","bind","onChange","handleUsernameChange","ref","textarea","handleContentChange","onClick","handleSubmit","focus","getItem","_loadUsername","Component","Comment","timeString","_updateTimeString","_timer","setInterval","comment","duration","now","Math","round","max","onDeleteComment","index","handleDeleteComment","clearInterval","CommentList","comments","map","i","defaultProps","CommentApp","_loadComments","JSON","parse","stringify","alert","push","_saveComments","splice","handleSubmitComment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a08d107.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass CommentInput extends Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n          username: '',\r\n          content: ''\r\n        }\r\n    }\r\n    handleUsernameChange (event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n    handleContentChange (event) {\r\n        this.setState({\r\n            content: event.target.value\r\n        })\r\n    }\r\n    handleSubmit () {\r\n        if (this.props.onSubmit) {\r\n            // const { username, content } = this.state\r\n            this.props.onSubmit({\r\n                username: this.state.username,\r\n                content: this.state.content,\r\n                createdTime: +new Date()\r\n            })\r\n        }\r\n        this.setState({ content: '' })\r\n    }\r\n    \r\n    _saveUsername (username) {\r\n        localStorage.setItem('username', username)\r\n    }\r\n\r\n    handleUsernameBlur (event) {\r\n        this._saveUsername(event.target.value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='comment-input'>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>用户名：</span>\r\n                    <div className='comment-field-input'>\r\n                        <input\r\n                            value={this.state.username}\r\n                            onBlur={this.handleUsernameBlur.bind(this)}\r\n                            onChange={this.handleUsernameChange.bind(this)} />\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field'>\r\n                    <span className='comment-field-name'>评论内容：</span>\r\n                    <div className='comment-field-input'>\r\n                        <textarea \r\n                            ref={(textarea) => this.textarea = textarea}\r\n                            value={this.state.content}\r\n                            onChange={this.handleContentChange.bind(this)} />\r\n                    </div>\r\n                </div>\r\n                <div className='comment-field-button'>\r\n                    <button onClick={this.handleSubmit.bind(this)}>\r\n                        发布\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.textarea.focus()\r\n    }\r\n    \r\n    \r\n    _loadUsername () {\r\n        const username = localStorage.getItem('username')\r\n        if (username) {\r\n            this.setState({ username })\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillMount () {\r\n        this._loadUsername()\r\n    }\r\n}\r\n\r\nexport default CommentInput","import React, { Component } from 'react'\r\n\r\nclass Comment extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = { timeString: '' }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount () {\r\n        this._updateTimeString()\r\n        this._timer = setInterval(\r\n            this._updateTimeString.bind(this),\r\n            5000\r\n        )\r\n    }\r\n\r\n    _updateTimeString () {\r\n        const comment = this.props.comment\r\n        const duration = (+Date.now() - comment.createdTime) / 1000\r\n        this.setState({\r\n            timeString: duration > 60\r\n            ? `${Math.round(duration / 60)} 分钟前`\r\n            : `${Math.round(Math.max(duration, 1))} 秒前`\r\n        })\r\n    }\r\n\r\n    handleDeleteComment () {\r\n        if (this.props.onDeleteComment) {\r\n            this.props.onDeleteComment(this.props.index)\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='comment'>\r\n                <div className='comment-user'>\r\n                    <span>{this.props.comment.username} </span>：\r\n                </div>\r\n                <p>{this.props.comment.content}</p>\r\n                <span className='comment-createdtime'>\r\n                    {this.state.timeString}\r\n                </span>\r\n                <span\r\n                    onClick={this.handleDeleteComment.bind(this)}\r\n                    className='comment-delete'>\r\n                    删除\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        clearInterval(this._timer)\r\n    }\r\n}\r\n\r\nexport default Comment","import React, { Component } from 'react'\r\nimport Comment from './Comment'\r\n\r\nclass CommentList extends Component {\r\n    static defaultProps = {\r\n        comments: []\r\n    }\r\n\r\n    handleDeleteComment (index) {\r\n        if (this.props.onDeleteComment) {\r\n            this.props.onDeleteComment(index)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.comments.map((comment, i) =>\r\n                <Comment\r\n                    comment={comment}\r\n                    key={i}\r\n                    index={i}\r\n                    onDeleteComment={this.handleDeleteComment.bind(this)} />\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentList","import React, { Component } from 'react'\r\nimport CommentInput from './CommentInput'\r\nimport CommentList from './CommentList'\r\n\r\nclass CommentApp extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            comments: []\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount () {\r\n        this._loadComments()\r\n    }\r\n    \r\n    _loadComments () {\r\n        let comments = localStorage.getItem('comments')\r\n        if (comments) {\r\n            comments = JSON.parse(comments)\r\n            this.setState({ comments })\r\n        }\r\n    }\r\n    \r\n    _saveComments (comments) {\r\n        localStorage.setItem('comments', JSON.stringify(comments))\r\n    }\r\n\r\n    handleSubmitComment (comment) {\r\n        if (!comment) return\r\n        if (!comment.username) return alert('请输入用户名')\r\n        if (!comment.content) return alert('请输入评论内容') \r\n        const comments = this.state.comments\r\n        comments.push(comment)\r\n        this.setState({ comments })\r\n        this._saveComments(comments)\r\n    }\r\n\r\n    handleDeleteComment (index) {\r\n        const comments = this.state.comments\r\n        comments.splice(index, 1)\r\n        this.setState({ comments })\r\n        this._saveComments(comments)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <CommentInput onSubmit={this.handleSubmitComment.bind(this)} />\r\n                <CommentList\r\n                    comments={this.state.comments}\r\n                    onDeleteComment={this.handleDeleteComment.bind(this)} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CommentApp from './CommentApp'\nimport './index.css'\n\nReactDOM.render(\n    <CommentApp />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}